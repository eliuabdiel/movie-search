{"version":3,"sources":["components/Title.js","components/SearchForm.js","components/Movie.js","components/MovieList.js","pages/Home.js","pages/About.js","App.js","reportWebVitals.js","index.js"],"names":["Title","props","className","styleName","children","API_KEY","SearchForm","state","inputMovie","_handleChange","e","setState","target","value","_handleSubmit","preventDefault","fetch","then","res","json","results","Search","onResults","onSubmit","this","onChange","type","placeholder","Component","Movie","id","poster","title","year","console","log","to","style","textDecoration","Card","width","Img","variant","src","Body","Text","MovieList","movies","map","movie","imdbID","Year","Poster","Home","usedSearch","_handleResults","setResults","Container","Row","Col","xl","lg","md","xs","length","About","selectedMovie","useParams","forEach","App","resultsAbout","_handleAboutResult","basename","process","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17510287.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Title = (props) => (\n    <h1 className={`text-center ${props.styleName}`}>\n        {props.children}\n    </h1>\n)\n","import React, { Component } from \"react\";\nconst API_KEY = \"fb2fa295\";\nexport class SearchForm extends Component {\n  state = {\n    inputMovie: \"\",\n  };\n  _handleChange = (e) => {\n    this.setState({ inputMovie: e.target.value });\n  };\n  _handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\n      `https://www.omdbapi.com/?apikey=${API_KEY}&s=${this.state.inputMovie}`\n    )\n      .then((res) => res.json())\n      .then((results) => {\n        const { Search = [] } = results;\n        this.props.onResults(Search);\n      });\n  };\n  render() {\n    return (\n      <form onSubmit={this._handleSubmit}>\n        <div className=\"input-group\">\n          <input\n            onChange={this._handleChange}\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Movie to search\"\n          />\n          <div className=\"input-group-append\">\n            <button className=\"btn btn-primary\">\n              <i className=\"fa fa-search\"></i>\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card } from 'react-bootstrap'\nimport {\n    Link\n  } from \"react-router-dom\";\n\nexport class Movie extends Component{\n    static propTypes = {\n        id: PropTypes.string,\n        title: PropTypes.string,\n        year: PropTypes.string,\n        poster: PropTypes.string\n    }\n    render(){\n        const { id, poster, title, year } = this.props\n        console.log('llaves',id)\n        return(\n            <Link to={`/about/${id}`} style={{ textDecoration: 'none' }}>\n                <Card style={{ width: '18rem' }} className=\"mt-3\">\n                    <Card.Img variant=\"top\" src={`${poster}`}/>\n                    <Card.Body>\n                        <Card.Title>{title}</Card.Title>\n                        <Card.Text>{year}</Card.Text>\n                    </Card.Body>\n                </Card>\n            </Link>\n            \n        )\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Movie } from './Movie'\n\nexport class MovieList extends Component{\n    static propTypes = {\n        movies: PropTypes.array\n    }\n    render() {\n        const {movies} = this.props \n        return movies.map(movie => {\n            return(\n                <Movie \n                    key={movie.imdbID}\n                    id={movie.imdbID}\n                    title={movie.Title}\n                    year={movie.Year}\n                    poster={movie.Poster}\n                />\n            )\n        })\n        \n    }\n}","import React, {Component} from 'react'\nimport { Title }  from '../components/Title'\nimport { SearchForm }  from '../components/SearchForm'\nimport { Container,Row, Col } from 'react-bootstrap';\nimport { MovieList } from '../components/MovieList';\n\nexport class Home extends Component {\n    state = { results: [], usedSearch: false\n    }\n  \n    _handleResults = (results) => {\n      this.setState({ results, usedSearch: true })\n      this.props.setResults(results)\n    }\n    render(){\n        return (\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xl=\"8\" lg=\"8\" md=\"10\" xs=\"12\">\n              <Title styleName=\"mt-3\">Search Movies</Title> {/*styleName are name of css classes, this will be sent as a prop*/}\n              <SearchForm onResults={this._handleResults}/>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-around\">\n                {this.state.usedSearch\n                    ? this.state.results.length === 0\n                      ? <p className=\"text-center mt-3 font-weight-bold\">Sorry, no results found </p >\n                      : <MovieList\n                        movies={this.state.results}\n                        />\n                    : null\n                }\n          </Row>\n        </Container>\n        );\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Card } from 'react-bootstrap'\nimport {\n    Redirect,\n    useParams\n  } from \"react-router-dom\";\nfunction About({movies}){\n    let { selectedMovie } = []\n    let { id } = useParams();\n    if (movies.length===0){\n        return <p>not found</p>\n    }\n    movies.forEach(movie => {\n        if (movie.imdbID === id){\n            selectedMovie = movie\n        }\n    });\n    console.log(selectedMovie)\n    return(\n        <Card style={{ width: '18rem' }} className=\"mt-3\">\n            <Card.Img variant=\"top\" src={`${selectedMovie.Poster}`}/>\n            <Card.Body>\n                <Card.Title>{selectedMovie.Title}</Card.Title>\n                <Card.Text>{selectedMovie.Year}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\nAbout.propTypes = {\n    movies: PropTypes.array\n}\nexport default About","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Home } from \"./pages/Home\";\nimport About from \"./pages/About\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    resultsAbout: [],\n  };\n  _handleAboutResult = (results) => {\n    this.setState({ resultsAbout: results });\n    console.log(\"Resultados del About\", this.state.resultsAbout);\n  };\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/about/:id\">\n            <About movies={this.state.resultsAbout}></About>\n          </Route>\n          <Route exact path=\"/\">\n            <Home setResults={this._handleAboutResult} />\n          </Route>\n          <Route path=\"*\">\n            <p>Not found</p>\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}